---
title: "Biostat 203B Homework 3"
subtitle: "Due Feb 21 @ 11:59PM"
author: "Palash Raval and 406551574"
format:
  html:
    theme: cosmo
    embed-resources: true
    number-sections: false
    toc: true
    toc-depth: 4
    toc-location: left
    code-fold: false
---

Display machine information for reproducibility:
```{r}
sessionInfo()
```

Load necessary libraries (you can add more as needed).
```{r setup}
library(arrow)
library(gtsummary)
library(memuse)
library(pryr)
library(R.utils)
library(tidyverse)
library(duckdb)
```

Display your machine memory.
```{r}
memuse::Sys.meminfo()
```

In this exercise, we use tidyverse (ggplot2, dplyr, etc) to explore the [MIMIC-IV](https://physionet.org/content/mimiciv/3.1/) data introduced in [homework 1](https://ucla-biostat-203b.github.io/2025winter/hw/hw1/hw1.html) and to build a cohort of ICU stays.

## Q1. Visualizing patient trajectory

Visualizing a patient's encounters in a health care system is a common task in clinical data analysis. In this question, we will visualize a patient's ADT (admission-discharge-transfer) history and ICU vitals in the MIMIC-IV data.

### Q1.1 ADT history

A patient's ADT history records the time of admission, discharge, and transfer in the hospital. This figure shows the ADT history of the patient with `subject_id` 10001217 in the MIMIC-IV data. The x-axis is the calendar time, and the y-axis is the type of event (ADT, lab, procedure). The color of the line segment represents the care unit. The size of the line segment represents whether the care unit is an ICU/CCU. The crosses represent lab events, and the shape of the dots represents the type of procedure. The title of the figure shows the patient's demographic information and the subtitle shows top 3 diagnoses.

Hint: We need to pull information from data files `patients.csv.gz`, `admissions.csv.gz`, `transfers.csv.gz`, `labevents.csv.gz`, `procedures_icd.csv.gz`, `diagnoses_icd.csv.gz`, `d_icd_procedures.csv.gz`, and `d_icd_diagnoses.csv.gz`. For the big file `labevents.csv.gz`, use the Parquet format you generated in Homework 2. For reproducibility, make the Parquet folder `labevents_pq` available at the current working directory `hw3`, for example, by a symbolic link. Make your code reproducible.


```{r}
demographic = read_csv("~/mimic/hosp/patients.csv.gz", 
                       show_col_types = FALSE) %>%
  filter(subject_id == 10001217)
```


```{r}
adt = read_csv("~/mimic/hosp/admissions.csv.gz",
               show_col_types = FALSE) %>%
  filter(subject_id == 10001217)
```


```{r}
color_info = read_csv("~/mimic/hosp/transfers.csv.gz",
                      show_col_types = FALSE) %>%
  filter(subject_id == 10001217)
```


```{r}
shape_info = read_csv("~/mimic/hosp/procedures_icd.csv.gz",
                      show_col_types = FALSE) %>%
  filter(subject_id == 10001217)
```

```{r}
labevents_subset = open_dataset("labevents_pq") %>%
  filter(subject_id == 10001217) %>%
  collect()
```


```{r}
diagnoses = read_csv("~/mimic/hosp/diagnoses_icd.csv.gz", 
                     show_col_types = FALSE)
```

```{r}
diagnoses = diagnoses %>% 
  filter(subject_id == 10001217) %>%
  head(3)
```


```{r}
diagnoses_codes = read_csv("~/mimic/hosp/d_icd_diagnoses.csv.gz",
                           show_col_types = FALSE)
```

```{r}
diagnoses_codes = diagnoses_codes %>% 
  filter(icd_code %in% diagnoses$icd_code)
```


```{r, warning=FALSE}
ggplot() +
  geom_segment(data = adt, aes(x = admittime, xend = dischtime, y = "lab"),
               linewidth = 0.1) +
  geom_point(data = labevents_subset, aes(x = charttime, y = "lab"), 
             shape = 3, size = 2) + 
  geom_segment(data = adt, aes(x = admittime, xend = dischtime, y = "adt")) + 
  geom_segment(data = color_info, aes(x = intime, xend = outtime, y = "adt", 
                                      colour = careunit, 
                                      linewidth = careunit)) + 
  geom_point(data = shape_info, aes(x = as.POSIXct(chartdate), y = "procedure",
                                    shape = icd_code),
             size = 4) + 
  scale_shape_manual(values = c("0139" = 17,
                                "0331" = 15,
                                "3897" = 16),
                     labels = c("0139" = "Other incision of brain",
                                "0331" = "Spinal Tap",
                                "3897" = "Central venous catheter
                                placement with guidance"),
                     name = "Procedure") + 
  labs(title = paste0("Patient ", demographic$subject_id, ", ",  
                     demographic$gender, ", ", demographic$anchor_age, 
                     " years old ", tolower(adt$race)),
       subtitle = paste(diagnoses_codes$long_title[1],
                        diagnoses_codes$long_title[2],
                        diagnoses_codes$long_title[3],
                        sep = "\n"),
       x = "Calendar Time",
       y = "")
```

Do a similar visualization for the patient with `subject_id` 10063848 using ggplot.

```{r}
demographic = read_csv("~/mimic/hosp/patients.csv.gz", 
                       show_col_types = FALSE) %>%
  filter(subject_id == 10063848)
```

```{r}
adt = read_csv("~/mimic/hosp/admissions.csv.gz", 
               show_col_types = FALSE) %>%
  filter(subject_id == 10063848)
```

```{r}
color_info = read_csv("~/mimic/hosp/transfers.csv.gz", 
                      show_col_types = FALSE) %>%
  filter(subject_id == 10063848)
```

```{r}
shape_info = read_csv("~/mimic/hosp/procedures_icd.csv.gz",
                      show_col_types = FALSE) %>%
  filter(subject_id == 10063848)
```

```{r}
procedures = read_csv("~/mimic/hosp/d_icd_procedures.csv.gz",
                      show_col_types = FALSE) 
```

```{r}
procedures = procedures %>% 
  filter(icd_code %in% shape_info$icd_code)

procedures
```

```{r}
labevents_subset = open_dataset("labevents_pq") %>%
  filter(subject_id == 10063848) %>%
  collect()
```

```{r}
diagnoses = read_csv("~/mimic/hosp/diagnoses_icd.csv.gz",
                     show_col_types = FALSE) %>%
  filter(subject_id == 10063848) %>%
  head(3)
```

```{r}
diagnoses_codes = read_csv("~/mimic/hosp/d_icd_diagnoses.csv.gz",
                           show_col_types = FALSE)
```

```{r}
diagnoses_codes = diagnoses_codes %>% 
  filter(icd_code %in% diagnoses$icd_code)
```


```{r, warning=FALSE}
ggplot() +
  geom_segment(data = adt, aes(x = admittime, xend = dischtime, y = "lab"),
               linewidth = 0.1) +
  geom_point(data = labevents_subset, aes(x = charttime, y = "lab"), 
             shape = 3, size = 2) + 
  geom_segment(data = adt, aes(x = admittime, xend = dischtime, y = "adt")) + 
  geom_segment(data = color_info, aes(x = intime, xend = outtime, y = "adt", 
                                      colour = careunit, linewidth = careunit), 
               ) + 
  geom_point(data = shape_info, aes(x = as.POSIXct(chartdate), y = "procedure",
                                    shape = icd_code), size = 4) + 
  scale_shape_manual(values = c("02HV33Z" = 17,
                                "0DB80ZZ" = 15,
                                "0DN80ZZ" = 16,
                                "0W9G30Z" = 14,
                                "4A023N6" = 13),
                     labels = c("02HV33Z" = 
                                  "Insertion of Infusion Device 
                                  into Superior Vena Cava, Percutaneous 
                                  Approach",
                                "0DB80ZZ" = 
                                  "Excision of Small Intestine, Open Approach",
                                "0DN80ZZ" = 
                                  "Release Small Intestine, Open Approach",
                                "0W9G30Z" = 
                                  "Drainage of Peritoneal Cavity with 
                                Drainage Device, Percutaneous Approach",
                                "4A023N6" = 
                                 "Measurement of Cardiac Sampling and Pressure, 
                                 Right Heart, Percutaneous Approach")) + 
  labs(title = paste0("Patient ", demographic$subject_id, ", ",  
                     demographic$gender, ", ", demographic$anchor_age, 
                     " years old ", tolower(adt$race)),
       subtitle = paste(diagnoses_codes$long_title[1],
                        diagnoses_codes$long_title[2],
                        diagnoses_codes$long_title[3],
                        sep = "\n"),
       shape = "Procedure",
       x = "Calendar Time",
       y = "") + 
  theme(legend.position = "right", 
        legend.box.margin = margin(t = 15))

```

```{r}
rm(list = ls())
```


### Q1.2 ICU stays

ICU stays are a subset of ADT history. This figure shows the vitals of the patient `10001217` during ICU stays. The x-axis is the calendar time, and the y-axis is the value of the vital. The color of the line represents the type of vital. The facet grid shows the abbreviation of the vital and the stay ID.


```{r}
chartevents_subset = open_dataset("chartevents_pq") %>%
  filter(subject_id == 10001217) %>%
  collect()
```


```{r}
items = read_csv("~/mimic/icu/d_items.csv.gz", 
                 show_col_types = FALSE)

items = items %>% filter(abbreviation %in% c("HR", "NBPd","NBPs","RR",
                                             "Temperature F"))
```

```{r}
chartevents_subset = chartevents_subset %>% 
  filter(itemid %in% items$itemid)
```


```{r}

labels = c("220045" = "HR",
           "220179" = "NBPd",
           "220180" = "NBPs",
           "220210" = "RR",
           "223761" = "Temperature F")

ggplot(data = chartevents_subset) + 
  geom_line(mapping = aes(x = charttime, y = valuenum, 
                          colour = as.factor(itemid))) +
  geom_point(mapping = aes(x = charttime, y = valuenum, 
                          colour = as.factor(itemid))) + 
  facet_grid(itemid~stay_id, scales = "free", 
             labeller = labeller(itemid = as_labeller(labels))) + 
  scale_x_datetime(date_breaks = "6 hours",
                   date_labels = "%Y-%m-%d\n%H:%M") + 
  theme(axis.text.x = element_text(size = 6), legend.position = "None") +
  labs(title = paste("Patient", chartevents_subset$subject_id, 
                     "ICU stays - Vitals"),
       x = "", 
       y = "")
```

Do a similar visualization for the patient `10063848`.


```{r}
chartevents_subset = open_dataset("chartevents_pq") %>%
  filter(subject_id == 10063848) %>%
  collect()
```

```{r}
chartevents_subset = chartevents_subset %>% 
  filter(itemid %in% items$itemid)
```


```{r}

labels = c("220045" = "HR",
           "220179" = "NBPd",
           "220180" = "NBPs",
           "220210" = "RR",
           "223761" = "Temperature F")

ggplot(data = chartevents_subset) + 
  geom_line(mapping = aes(x = charttime, y = valuenum, 
                          colour = as.factor(itemid))) +
  geom_point(mapping = aes(x = charttime, y = valuenum, 
                          colour = as.factor(itemid))) + 
  facet_grid(itemid~stay_id, scales = "free_y", 
             labeller = labeller(itemid = as_labeller(labels))) + 
  scale_x_datetime(date_breaks = "10 hours",
                   date_labels = "%Y-%m-%d\n%H:%M") + 
  theme(axis.text.x = element_text(size = 5), legend.position = "None") +
  labs(title = paste("Patient", chartevents_subset$subject_id, 
                     "ICU stays - Vitals"),
       x = "", 
       y = "")
```

```{r}
rm(list = ls())
```


## Q2. ICU stays

`icustays.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/icu/icustays/>) contains data about Intensive Care Units (ICU) stays. The first 10 lines are

```{bash}
zcat < ~/mimic/icu/icustays.csv.gz | head
```

### Q2.1 Ingestion

Import `icustays.csv.gz` as a tibble `icustays_tble`. 

```{r}
icustays_tble = read_csv("~/mimic/icu/icustays.csv.gz")
```

### Q2.2 Summary and visualization

How many unique `subject_id`? Can a `subject_id` have multiple ICU stays? Summarize the number of ICU stays per `subject_id` by graphs. 

```{r}
length(unique(icustays_tble$subject_id))
```

```{r}
icustays_tble %>% count(subject_id, sort = TRUE)
```

```{r}
icu_counts = icustays_tble %>% 
  count(subject_id, sort = TRUE) %>% 
  head(15)
```

```{r}
ggplot(data = icu_counts, aes(x = as.factor(subject_id), 
                              y = n,
                              fill = as.factor(subject_id))) +
  geom_bar(stat = "identity", color = "lightblue") +
  labs(title = "Top 15 Subjects with Most ICU Stays",
       x = "Subject ID",
       y = "ICU Stays Count",
       fill = "Subject ID Legend") + 
  theme(axis.text.x = element_text(angle = 90))
```

```{r}
icu_counts = icustays_tble %>% 
  count(subject_id, sort = TRUE)
```


```{r}
ggplot(icu_counts, aes(x = n)) + 
  geom_histogram() +
  labs(title = "Distribution of Counts of ICU Stays",
       x = "Counts",
       y = "Number of Subject ID in Log Scale") + 
  scale_y_continuous(trans = "log10")
```


**Solution: There are 65366 unique values for `subject_id`. Yes, a `subject_id` can have multiple ICU stays. Each row represents one ICU stay, so any count of `subject_id` that is greater than 1 indicates more than one ICU stay for a particular subject.** 


## Q3. `admissions` data

Information of the patients admitted into hospital is available in `admissions.csv.gz`. See <https://mimic.mit.edu/docs/iv/modules/hosp/admissions/> for details of each field in this file. The first 10 lines are

```{bash}
zcat < ~/mimic/hosp/admissions.csv.gz | head
```

### Q3.1 Ingestion

Import `admissions.csv.gz` as a tibble `admissions_tble`.

```{r}
admissions_tble = read_csv("~/mimic/hosp/admissions.csv.gz")

head(admissions_tble)
```

### Q3.2 Summary and visualization

Summarize the following information by graphics and explain any patterns you see.

- number of admissions per patient  
- admission hour (anything unusual?)  
- admission minute (anything unusual?)  
- length of hospital stay (from admission to discharge) (anything unusual?)  

According to the [MIMIC-IV documentation](https://mimic.mit.edu/docs/iv/about/concepts/#date-shifting), 

> All dates in the database have been shifted to protect patient confidentiality. Dates will be internally consistent for the same patient, but randomly distributed in the future. Dates of birth which occur in the present time are not true dates of birth. Furthermore, dates of birth which occur before the year 1900 occur if the patient is older than 89. In these cases, the patient’s age at their first admission has been fixed to 300.


**Solution: Graph for "Number of Admissions per Patient"**

```{r}
admission_per_patient = admissions_tble %>% 
  group_by(subject_id) %>%
  summarize(admission_counts = n_distinct(hadm_id)) %>%
  arrange(desc(admission_counts)) %>%
  head(10)
```

```{r}
ggplot(data = admission_per_patient, aes(as.factor(subject_id), 
                              y = admission_counts,
                              fill = as.factor(subject_id))) +
  geom_bar(stat = "identity", color = "green") +
  labs(title = "Top 10 Subjects with Most Admissions",
       x = "Subject ID",
       y = "Admissions Count",
       fill = "Subject ID Legend") + 
  theme(axis.text.x = element_text(angle = 90))
```

**Solution: Graph for "admission hour"**

```{r}
ggplot(admissions_tble, aes(x = hour(admittime))) + 
  geom_histogram(bins = 24, fill = "orangered") + 
  labs(title = "Admission Time Hour Distribution",
       x = "Hour of Admission",
       y = "Count") + 
  theme(legend.position = "NONE")
```

This graph shows that there seems to be the peak admission hour is at midnight(start of a new day). This doesn't make much sense because I would expect the highest admission to happen during the morning or in the middle of the day, because that is when the most people are awake and would seek treatment. My best guess for why this could be happening is that the times must be when a large amount of data for the patients is added into the database. Midnight, the start of a new day, may be the time that a portion of data from the previous day is added. 


**Solution: Graph for "admission minute"**

```{r}
ggplot(admissions_tble, aes(x = minute(admittime))) + 
  geom_histogram(bins = 15, fill = "royalblue") + 
  labs(title = "Admission Time Hour Distribution",
       x = "Minute of Admission",
       y = "Count") + 
  theme(legend.position = "NONE")
```

This graph shows that the highest minute of admission is at minute 0. I believe this constitutes as unusual because I would expect the distribution of minute to be relatively uniform. The reason for this could be tied with what I mentioned earlier about the data being added at a particular time (midnight). If it is documented at exactly midnight, the data would tend to have a larger portion of minute values being 0.  

**Solution: Graph for "length of hospital stay (from admission to discharge)"** 

```{r}
time_difference_sec = admissions_tble$dischtime - admissions_tble$admittime

admissions_tble$time_difference_hour = time_difference_sec/3600
```

```{r}
ggplot(admissions_tble, aes(x = as.numeric(time_difference_hour))) + 
  geom_histogram(bins = 15, fill = "purple") + 
  labs(title = "Distribution for Length of Hospital Stay",
       x = "Time Difference in Hours",
       y = "Count")
```

This graph shows that the majority of values after subtracting the discharge time from the admission time around 0 hours. This does not make sense as you would expect a trip to the hospital to take quite a while, so I would say this is unusual. The dates in the MIMIC IV are known to be shifted to protect patients, which could be why the times are so unusual.  

## Q4. `patients` data

Patient information is available in `patients.csv.gz`. See <https://mimic.mit.edu/docs/iv/modules/hosp/patients/> for details of each field in this file. The first 10 lines are

```{bash}
zcat < ~/mimic/hosp/patients.csv.gz | head
```

### Q4.1 Ingestion

Import `patients.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/hosp/patients/>) as a tibble `patients_tble`.

```{r}
patients_tble = read_csv("~/mimic/hosp/patients.csv.gz")

head(patients_tble)
```


### Q4.2 Summary and visualization

Summarize variables `gender` and `anchor_age` by graphics, and explain any patterns you see.

```{r}
patients_tble %>% count(gender)
```
```{r}
ggplot(data = patients_tble, aes(x = as.factor(gender),
                                 fill = as.factor(gender))) + 
  geom_bar(width = 0.4) + 
  scale_fill_manual(values = c("pink", "lightblue")) + 
  labs(title = "Patient Gender Count", 
       x = "Gender",
       y = "Count",
       fill = "Gender")
```

This graph indicates that females make up the majority of the patients, although the gender distribution doesn't seem to be overwhemingly one-sided.  

```{r}
ggplot(patients_tble, aes(x = anchor_age)) + 
  geom_histogram(bins = 20, fill = "gold") + 
  labs(title = "Distribution of Anchor Age",
       x = "Anchor Age", 
       y = "Count")
```

The anchor age with the highest counts seem to be under the age of 25. The distribution also appears to steadily decrease as the anchor age increases. I would have expected patients to be of older ages to make up the majority of patients, but from the graph, does not seem to be the case. One possible reason for this could be that the anchor ages are not accurate and are shifted to protect the patients' privacy.     


## Q5. Lab results

`labevents.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/hosp/labevents/>) contains all laboratory measurements for patients. The first 10 lines are

```{bash}
#| eval: false
zcat < ~/mimic/hosp/labevents.csv.gz | head
```

`d_labitems.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/hosp/d_labitems/>) is the dictionary of lab measurements. 

```{bash}
zcat < ~/mimic/hosp/d_labitems.csv.gz | head
```

We are interested in the lab measurements of creatinine (50912), potassium (50971), sodium (50983), chloride (50902), bicarbonate (50882), hematocrit (51221), white blood cell count (51301), and glucose (50931). Retrieve a subset of `labevents.csv.gz` that only containing these items for the patients in `icustays_tble`. Further restrict to the last available measurement (by `storetime`) before the ICU stay. The final `labevents_tble` should have one row per ICU stay and columns for each lab measurement.


Hint: Use the Parquet format you generated in Homework 2. For reproducibility, make `labevents_pq` folder available at the current working directory `hw3`, for example, by a symbolic link.

```{r}
important_measurements = c(50912, 50971, 50983, 50902, 50882, 51221,
                           51301, 50931)

labevents_subset = open_dataset("labevents_pq") %>%
  to_duckdb() %>%
  filter(itemid %in% important_measurements) %>%
  filter(subject_id %in% icustays_tble$subject_id) %>%
  arrange(subject_id) %>%
  collect()
```


```{r, warning=FALSE}
labevents_subset = left_join(labevents_subset, icustays_tble,
                   by = "subject_id")
```


```{r}
labevents_subset = labevents_subset %>%
  filter(storetime < intime)
```

```{r}
labevents_subset = labevents_subset %>% 
  group_by(subject_id, stay_id, itemid) %>%
  slice_max(storetime, with_ties = FALSE) %>%
  select(subject_id, stay_id, itemid, valuenum)
```


```{r}
labevents_tble = labevents_subset %>% 
  pivot_wider(names_from = itemid, values_from = valuenum)
```

```{r}
colnames(labevents_tble) = c("subject_id",
                               "stay_id",
                               "bicarbonate", 
                               "chloride",
                               "creatinine",
                               "glucose",
                               "potassium",
                               "sodium",
                               "hematocrit",
                               "white_blood_cell_count")

head(labevents_tble, 10)
```

```{r}
rm(labevents_subset)
```


## Q6. Vitals from charted events

`chartevents.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/icu/chartevents/>) contains all the charted data available for a patient. During their ICU stay, the primary repository of a patient’s information is their electronic chart. The `itemid` variable indicates a single measurement type in the database. The `value` variable is the value measured for `itemid`. The first 10 lines of `chartevents.csv.gz` are
```{bash}
#| eval: false
zcat < ~/mimic/icu/chartevents.csv.gz | head
```

`d_items.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/icu/d_items/>) is the dictionary for the `itemid` in `chartevents.csv.gz`. 
```{bash}
zcat < ~/mimic/icu/d_items.csv.gz | head
```

We are interested in the vitals for ICU patients: heart rate (220045), systolic non-invasive blood pressure (220179), diastolic non-invasive blood pressure (220180), body temperature in Fahrenheit (223761), and respiratory rate (220210). Retrieve a subset of `chartevents.csv.gz` only containing these items for the patients in `icustays_tble`. Further restrict to the first vital measurement (by `storetime`) within the ICU stay. The final `chartevents_tble` should have one row per ICU stay and columns for each vital measurement. 


Hint: Use the Parquet format you generated in Homework 2. For reproducibility, make `chartevents_pq` folder available at the current working directory, for example, by a symbolic link.


```{r}
important_vitals = c(220045, 220179, 220180, 223761, 220210)

chartevents_subset = open_dataset("chartevents_pq") %>%
  to_duckdb() %>%
  filter(itemid %in% important_vitals) %>%
  filter(subject_id %in% icustays_tble$subject_id) %>%
  arrange(subject_id) %>%
  collect()

```

```{r}
chartevents_subset = chartevents_subset %>% 
  group_by(subject_id, stay_id, itemid) %>%
  slice_min(storetime) %>%
  select(subject_id, stay_id, itemid, valuenum)
```

```{r}
chartevents_subset = chartevents_subset %>% 
  group_by(subject_id, stay_id, itemid) %>% 
  summarize(valuenum = round(mean(valuenum), 
           digits = 1), .groups = "drop")
```

```{r}
chartevents_tble = chartevents_subset %>% 
  pivot_wider(names_from = itemid, values_from = valuenum)
```

```{r}
colnames(chartevents_tble) = c("subject_id",
                               "stay_id",
                               "heart_rate", 
                               "systolic_non-invasive_blood_pressure",
                               "diastolic_non-invasive_blood_pressure",
                               "respiratory rate",
                               "body_temperature_fahrenheit")

head(chartevents_tble)
```

## Q7. Putting things together

Let us create a tibble `mimic_icu_cohort` for all ICU stays, where rows are all ICU stays of adults (age at `intime` >= 18) and columns contain at least following variables

- all variables in `icustays_tble`  
- all variables in `admissions_tble`  
- all variables in `patients_tble`
- the last lab measurements before the ICU stay in `labevents_tble` 
- the first vital measurements during the ICU stay in `chartevents_tble`

The final `mimic_icu_cohort` should have one row per ICU stay and columns for each variable.


```{r}
mimic_icu_cohort = left_join(icustays_tble, admissions_tble, 
                         by = c("subject_id", "hadm_id"))

head(mimic_icu_cohort)
```

```{r}
mimic_icu_cohort = left_join(mimic_icu_cohort, patients_tble, 
                         by = "subject_id")

head(mimic_icu_cohort)
```

```{r}
mimic_icu_cohort = left_join(mimic_icu_cohort, labevents_tble, 
                         by = c("subject_id", "stay_id"))

head(mimic_icu_cohort)
```

```{r}
mimic_icu_cohort = left_join(mimic_icu_cohort, chartevents_tble, 
                         by = c("subject_id", "stay_id"))

head(mimic_icu_cohort)
```

```{r}
mimic_icu_cohort = mimic_icu_cohort %>%
  mutate(age_intime = anchor_age + year(intime) - anchor_year)
```

```{r}
mimic_icu_cohort = mimic_icu_cohort %>%
  filter(age_intime >= 18)
```


## Q8. Exploratory data analysis (EDA)

Summarize the following information about the ICU stay cohort `mimic_icu_cohort` using appropriate numerics or graphs:

- Length of ICU stay `los` vs demographic variables (race, insurance, marital_status, gender, age at intime)

- Length of ICU stay `los` vs the last available lab measurements before ICU stay

- Length of ICU stay `los` vs the first vital measurements within the ICU stay

- Length of ICU stay `los` vs first ICU unit


**Solution: Plots for Length of ICU stay `los` vs demographic variables (race, insurance, marital_status, gender, age at intime)**

```{r, warning=FALSE}
ggplot(data = mimic_icu_cohort, 
       aes(x = race, y = los)) + 
  geom_violin() +
  theme(axis.text.x = element_text(angle = 90, size = 6)) +
  labs(title = "Violin Plot for Race vs Length of Stay",
       x = "Race",
       y = "Length of Stay")
  
```

```{r, warning = FALSE}
ggplot(data = mimic_icu_cohort, 
       aes(x = insurance, y = los)) + 
  geom_violin() + 
  labs(title = "Violin Plot for Insurance vs Length of Stay",
       x = "Insurance",
       y = "Length of Stay")
  
```

```{r, warning = FALSE}
ggplot(data = mimic_icu_cohort, 
       aes(x = marital_status, y = los)) + 
  geom_violin() + 
  labs(title = "Violin Plot for Marital Status vs Length of Stay",
       x = "Marital Status",
       y = "Length of Stay")
  
```

```{r, warning=FALSE}
ggplot(data = mimic_icu_cohort, 
       aes(x = gender, y = los)) + 
  geom_violin() +
  labs(title = "Violin Plot for Gender vs Length of Stay",
       x = "Gender",
       y = "Length of Stay")
  
```

```{r, warning=FALSE}
ggplot(data = mimic_icu_cohort,
       aes(x = age_intime, y = los)) +
  geom_point() + 
  labs(title = "Scatterplot for In-time Age vs Length of Stay",
       x = "In-time Age",
       y = "Length of Stay")
```

**Solution: Plots for Length of ICU stay `los` vs the last available lab measurements before ICU stay**

```{r, warning=FALSE}
ggplot(data = mimic_icu_cohort, 
       aes(x = bicarbonate,
           y = los)) + 
  geom_point() + 
  labs(title = "Scatterplot for Bicarbonate vs Length of Stay",
       x = "Bicarbonate", 
       y = "Length of Stay")
```
```{r, warning=FALSE}
ggplot(data = mimic_icu_cohort, 
       aes(x = chloride,
           y = los)) + 
  geom_point() + 
  labs(title = "Scatterplot for Chloride vs Length of Stay",
       x = "Chloride", 
       y = "Length of Stay")
```

```{r, warning=FALSE}
ggplot(data = mimic_icu_cohort, 
       aes(x = creatinine,
           y = los)) + 
  geom_point() + 
  labs(title = "Scatterplot for Creatinine vs Length of Stay",
       x = "Creatinine", 
       y = "Length of Stay")
```

```{r, warning=FALSE}
ggplot(data = mimic_icu_cohort, 
       aes(x = glucose,
           y = los)) + 
  geom_point() + 
  labs(title = "Scatterplot for Glucose vs Length of Stay",
       x = "Glucose", 
       y = "Length of Stay")
```
```{r, warning=FALSE}
ggplot(data = mimic_icu_cohort, 
       aes(x = potassium,
           y = los)) + 
  geom_point() + 
  labs(title = "Scatterplot for Potassium vs Length of Stay",
       x = "Potassium", 
       y = "Length of Stay")
```
```{r, warning=FALSE}
ggplot(data = mimic_icu_cohort, 
       aes(x = sodium,
           y = los)) + 
  geom_point() + 
  labs(title = "Scatterplot for Sodium vs Length of Stay",
       x = "Sodium", 
       y = "Length of Stay")
```
```{r, warning=FALSE}
ggplot(data = mimic_icu_cohort, 
       aes(x = hematocrit,
           y = los)) + 
  geom_point() + 
  labs(title = "Scatterplot for Hematocrit vs Length of Stay",
       x = "Hematocrit", 
       y = "Length of Stay")
```
```{r, warning=FALSE}
ggplot(data = mimic_icu_cohort, 
       aes(x = white_blood_cell_count,
           y = los)) + 
  geom_point() + 
  labs(title = "Scatterplot for White Blood Cell Count vs Length of Stay",
       x = "White Blood Cell Count", 
       y = "Length of Stay")
```

**Solution: Plots for Length of ICU stay `los` vs the first vital measurements within the ICU stay**

```{r, warning=FALSE}
ggplot(data = mimic_icu_cohort, 
       aes(x = heart_rate,
           y = los)) + 
  geom_point() + 
  labs(title = "Scatterplot for Heart Rate vs Length of Stay",
       x = "Heart Rate", 
       y = "Length of Stay")
```

```{r, warning=FALSE}
ggplot(data = mimic_icu_cohort, 
       aes(x = `systolic_non-invasive_blood_pressure`,
           y = los)) + 
  geom_point() + 
  coord_cartesian(xlim = c(0, 260)) + 
  labs(title = "Scatterplot for Systolic Non-Invasive
       Blood Pressure vs Length of Stay",
       x = "Systolic Non-Invasive Blood Pressure", 
       y = "Length of Stay")
```
```{r}
summary(mimic_icu_cohort$`systolic_non-invasive_blood_pressure`)
```

I chose to limit the scale of x for the above graph because the outlier value of 116114 was making it hard to see the overall distribution of blood pressure. It should be noted that the outlier value is still there, even though it does not appear on this graph. The outlier value does not make any logical sense because it is not possible for a person's blood pressure to give a value that high. 

```{r, warning=FALSE}
ggplot(data = mimic_icu_cohort, 
       aes(x = `diastolic_non-invasive_blood_pressure`,
           y = los)) + 
  geom_point() + 
  coord_cartesian(xlim = c(0, 260)) + 
  labs(title = "Scatterplot for Diastolic Non-Invasive
       Blood Pressure vs Length of Stay",
       x = "Diastolic Non-Invasive Blood Pressure", 
       y = "Length of Stay")
```
```{r}
summary(mimic_icu_cohort$`diastolic_non-invasive_blood_pressure`)
```

This graph also has some outliers in blood pressure values which throw off the overall graph. I chose to limit the x-axis for this graph too in order to see the distribution better. It should be noted that the outlier values are still present even though they cannot be seen in the graph. The extreme value for blood pressure also does not make logical sense; It is not possible for a human's blood pressure to be that high.

```{r, warning=FALSE}
ggplot(data = mimic_icu_cohort, 
       aes(x = `respiratory rate`,
           y = los)) + 
  geom_point() + 
  labs(title = "Scatterplot for Respiratory Rate vs Length of Stay",
       x = "Respiratory Rate", 
       y = "Length of Stay")
```

```{r, warning=FALSE}
ggplot(data = mimic_icu_cohort, 
       aes(x = body_temperature_fahrenheit,
           y = los)) + 
  geom_point() + 
  labs(title = "Scatterplot for Body Temperature vs Length of Stay",
       x = "Body Temperature", 
       y = "Length of Stay")
```
The extreme values also throw off this graph a little, but you can still see the distribution of Body Temperature, so I have elected to show all the data points here. The extreme values of Body Temperature do not make any sense, which should be noted. 


**Solution: Graph for Length of ICU stay `los` vs first ICU unit**

```{r, warning=FALSE}
ggplot(data = mimic_icu_cohort,
       aes(x = first_careunit,
           y = los)) + 
  geom_boxplot() + 
  coord_flip() + 
  theme(axis.text.x = element_text(angle = 90)) + 
  labs(title = "First ICU Unit vs Length of Stay",
       x = "First ICU Unit",
       y = "Length of Stay")
  
```







